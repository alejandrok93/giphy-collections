{"ast":null,"code":"var _jsxFileName = \"/Users/alejandrok/lambda-school/code-challenges/react/challenge-front-end/src/components/Result.tsx\";\nimport * as React from 'react';\nimport { DragSource } from 'react-dnd';\nimport { DndTypes } from '../types/DndTypes';\nimport './styles.css'; //Declare spec function that includes available methods\n\nvar resultSource = {\n  beginDrag: function beginDrag(props) {\n    console.log('dragging item..');\n    return props.item;\n  },\n  endDrag: function endDrag(props, monitor, component) {\n    if (!monitor.didDrop()) {\n      return;\n    } //Get drop target component\n\n\n    var result = monitor.getDropResult();\n    var collection_id;\n\n    if (result) {\n      collection_id = result.collection.id;\n      console.log(collection_id);\n    }\n\n    return props.handleDrop(props.item, collection_id);\n  }\n}; // Declare function that returns object of the props to inject to component\n\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging()\n  };\n}\n\nvar Result = function Result(props) {\n  var isDragging = props.isDragging,\n      connectDragSource = props.connectDragSource,\n      item = props.item;\n  var img_url = '';\n  var opacity = isDragging ? 0 : 1;\n\n  if (item.images) {\n    img_url = item.images.fixed_height.url;\n  }\n\n  return connectDragSource(React.createElement(\"div\", {\n    className: \"item\",\n    style: {\n      opacity: opacity\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: img_url,\n    alt: item.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    value: \"Hello World\",\n    id: \"myInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })));\n};\n\nexport default DragSource(DndTypes.RESULT, resultSource, collect)(Result);","map":{"version":3,"sources":["/Users/alejandrok/lambda-school/code-challenges/react/challenge-front-end/src/components/Result.tsx"],"names":["React","DragSource","DndTypes","resultSource","beginDrag","props","console","log","item","endDrag","monitor","component","didDrop","result","getDropResult","collection_id","collection","id","handleDrop","collect","connect","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","Result","img_url","opacity","images","fixed_height","url","title","RESULT"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAO,cAAP,C,CAEA;;AACA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,SADoB,qBACVC,KADU,EACE;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,WAAOF,KAAK,CAACG,IAAb;AACA,GAJmB;AAKpBC,EAAAA,OALoB,mBAKZJ,KALY,EAKAK,OALA,EAKcC,SALd,EAK0C;AAC7D,QAAI,CAACD,OAAO,CAACE,OAAR,EAAL,EAAwB;AACvB;AACA,KAH4D,CAI7D;;;AACA,QAAMC,MAAM,GAAGH,OAAO,CAACI,aAAR,EAAf;AACA,QAAIC,aAAJ;;AACA,QAAIF,MAAJ,EAAY;AACXE,MAAAA,aAAa,GAAGF,MAAM,CAACG,UAAP,CAAkBC,EAAlC;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYQ,aAAZ;AACA;;AACD,WAAOV,KAAK,CAACa,UAAN,CAAiBb,KAAK,CAACG,IAAvB,EAA6BO,aAA7B,CAAP;AACA;AAjBmB,CAArB,C,CAoBA;;AACA,SAASI,OAAT,CAAiBC,OAAjB,EAA+BV,OAA/B,EAA6C;AAC5C,SAAO;AACNW,IAAAA,iBAAiB,EAAED,OAAO,CAACE,UAAR,EADb;AAENC,IAAAA,kBAAkB,EAAEH,OAAO,CAACI,WAAR,EAFd;AAGNC,IAAAA,UAAU,EAAEf,OAAO,CAACe,UAAR;AAHN,GAAP;AAKA;;AACD,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACrB,KAAD,EAAwB;AAAA,MAC9BoB,UAD8B,GACUpB,KADV,CAC9BoB,UAD8B;AAAA,MAClBJ,iBADkB,GACUhB,KADV,CAClBgB,iBADkB;AAAA,MACCb,IADD,GACUH,KADV,CACCG,IADD;AAEtC,MAAImB,OAAO,GAAG,EAAd;AACA,MAAMC,OAAO,GAAGH,UAAU,GAAG,CAAH,GAAO,CAAjC;;AAEA,MAAIjB,IAAI,CAACqB,MAAT,EAAiB;AAChBF,IAAAA,OAAO,GAAGnB,IAAI,CAACqB,MAAL,CAAYC,YAAZ,CAAyBC,GAAnC;AACA;;AAED,SAAOV,iBAAiB,CACvB;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AAAEO,MAAAA,OAAO,EAAPA;AAAF,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,GAAG,EAAED,OAAV;AAAmB,IAAA,GAAG,EAAEnB,IAAI,CAACwB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAC,aAAzB;AAAuC,IAAA,EAAE,EAAC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADuB,CAAxB;AAMA,CAfD;;AAiBA,eAAe/B,UAAU,CAACC,QAAQ,CAAC+B,MAAV,EAAkB9B,YAAlB,EAAgCgB,OAAhC,CAAV,CAAmDO,MAAnD,CAAf","sourcesContent":["import * as React from 'react';\nimport { ResultProps } from '../types/result';\nimport { DragSource } from 'react-dnd';\nimport { DndTypes } from '../types/DndTypes';\nimport './styles.css';\n\n//Declare spec function that includes available methods\nconst resultSource = {\n\tbeginDrag(props: any) {\n\t\tconsole.log('dragging item..');\n\t\treturn props.item;\n\t},\n\tendDrag(props: any, monitor: any, component: React.Component) {\n\t\tif (!monitor.didDrop()) {\n\t\t\treturn;\n\t\t}\n\t\t//Get drop target component\n\t\tconst result = monitor.getDropResult();\n\t\tlet collection_id;\n\t\tif (result) {\n\t\t\tcollection_id = result.collection.id;\n\t\t\tconsole.log(collection_id);\n\t\t}\n\t\treturn props.handleDrop(props.item, collection_id);\n\t}\n};\n\n// Declare function that returns object of the props to inject to component\nfunction collect(connect: any, monitor: any) {\n\treturn {\n\t\tconnectDragSource: connect.dragSource(),\n\t\tconnectDragPreview: connect.dragPreview(),\n\t\tisDragging: monitor.isDragging()\n\t};\n}\nconst Result = (props: ResultProps) => {\n\tconst { isDragging, connectDragSource, item } = props;\n\tlet img_url = '';\n\tconst opacity = isDragging ? 0 : 1;\n\n\tif (item.images) {\n\t\timg_url = item.images.fixed_height.url;\n\t}\n\n\treturn connectDragSource(\n\t\t<div className=\"item\" style={{ opacity }}>\n\t\t\t<img src={img_url} alt={item.title} />\n\t\t\t<input type=\"text\" value=\"Hello World\" id=\"myInput\" />\n\t\t</div>\n\t);\n};\n\nexport default DragSource(DndTypes.RESULT, resultSource, collect)(Result);\n"]},"metadata":{},"sourceType":"module"}