{"ast":null,"code":"var _jsxFileName = \"/Users/alejandrok/lambda-school/code-challenges/react/challenge-front-end/src/components/Collection.tsx\";\nimport * as React from 'react';\nimport { DropTarget } from 'react-dnd';\nimport { DndTypes } from '../types/DndTypes';\nimport './styles.css'; //Declare spec object with allowed methods\n\nvar collectionSpec = {\n  drop: function drop(props, monitor, component) {\n    var collection = props.collection;\n    return {\n      collection: collection\n    };\n  }\n}; //Declare collect funtion that returns object with props to inject to component\n\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    hovered: monitor.isOver(),\n    item: monitor.getItem()\n  };\n}\n\nvar Collection = function Collection(props) {\n  var connectDropTarget = props.connectDropTarget,\n      hovered = props.hovered,\n      collection = props.collection,\n      active = props.active;\n  var items = props.collection.items || [];\n  var name = props.collection.name;\n  var backGroundColor = hovered ? 'lightcyan' : '#282c34';\n  var number_of_items = items.length;\n  console.log(props);\n  return connectDropTarget(React.createElement(\"div\", {\n    onClick: function onClick(e) {\n      props.showItems(collection.id);\n    },\n    className: \"collection\",\n    style: {\n      color: 'white',\n      background: backGroundColor\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"collection-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, name), React.createElement(\"span\", {\n    className: \"number-of-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, number_of_items)));\n};\n\nexport default DropTarget(DndTypes.RESULT, collectionSpec, collect)(Collection);","map":{"version":3,"sources":["/Users/alejandrok/lambda-school/code-challenges/react/challenge-front-end/src/components/Collection.tsx"],"names":["React","DropTarget","DndTypes","collectionSpec","drop","props","monitor","component","collection","collect","connect","connectDropTarget","dropTarget","hovered","isOver","item","getItem","Collection","active","items","name","backGroundColor","number_of_items","length","console","log","e","showItems","id","color","background","RESULT"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAO,cAAP,C,CAEA;;AACA,IAAMC,cAAc,GAAG;AACtBC,EAAAA,IADsB,gBACjBC,KADiB,EACLC,OADK,EACSC,SADT,EACqC;AAC1D,QAAMC,UAAU,GAAGH,KAAK,CAACG,UAAzB;AACA,WAAO;AAAEA,MAAAA,UAAU,EAAVA;AAAF,KAAP;AACA;AAJqB,CAAvB,C,CAOA;;AACA,SAASC,OAAT,CAAiBC,OAAjB,EAA+BJ,OAA/B,EAA6C;AAC5C,SAAO;AACNK,IAAAA,iBAAiB,EAAED,OAAO,CAACE,UAAR,EADb;AAENC,IAAAA,OAAO,EAAEP,OAAO,CAACQ,MAAR,EAFH;AAGNC,IAAAA,IAAI,EAAET,OAAO,CAACU,OAAR;AAHA,GAAP;AAKA;;AAED,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACZ,KAAD,EAA4B;AAAA,MACtCM,iBADsC,GACaN,KADb,CACtCM,iBADsC;AAAA,MACnBE,OADmB,GACaR,KADb,CACnBQ,OADmB;AAAA,MACVL,UADU,GACaH,KADb,CACVG,UADU;AAAA,MACEU,MADF,GACab,KADb,CACEa,MADF;AAE9C,MAAMC,KAAK,GAAGd,KAAK,CAACG,UAAN,CAAiBW,KAAjB,IAA0B,EAAxC;AACA,MAAMC,IAAI,GAAGf,KAAK,CAACG,UAAN,CAAiBY,IAA9B;AACA,MAAMC,eAAe,GAAGR,OAAO,GAAG,WAAH,GAAiB,SAAhD;AACA,MAAMS,eAAe,GAAGH,KAAK,CAACI,MAA9B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ;AACA,SAAOM,iBAAiB,CACvB;AACC,IAAA,OAAO,EAAE,iBAAAe,CAAC,EAAI;AACbrB,MAAAA,KAAK,CAACsB,SAAN,CAAgBnB,UAAU,CAACoB,EAA3B;AACA,KAHF;AAIC,IAAA,SAAS,EAAC,YAJX;AAKC,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,UAAU,EAAET;AAA9B,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOC;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCD,IAAhC,CAPD,EAQC;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCE,eAAnC,CARD,CADuB,CAAxB;AAYA,CAnBD;;AAqBA,eAAerB,UAAU,CAACC,QAAQ,CAAC6B,MAAV,EAAkB5B,cAAlB,EAAkCM,OAAlC,CAAV,CAAqDQ,UAArD,CAAf","sourcesContent":["import * as React from 'react';\nimport { CollectionProps } from '../types/collection';\nimport { DropTarget } from 'react-dnd';\nimport { DndTypes } from '../types/DndTypes';\n\nimport './styles.css';\n\n//Declare spec object with allowed methods\nconst collectionSpec = {\n\tdrop(props: any, monitor: any, component: React.Component) {\n\t\tconst collection = props.collection;\n\t\treturn { collection };\n\t}\n};\n\n//Declare collect funtion that returns object with props to inject to component\nfunction collect(connect: any, monitor: any) {\n\treturn {\n\t\tconnectDropTarget: connect.dropTarget(),\n\t\thovered: monitor.isOver(),\n\t\titem: monitor.getItem()\n\t};\n}\n\nconst Collection = (props: CollectionProps) => {\n\tconst { connectDropTarget, hovered, collection, active } = props;\n\tconst items = props.collection.items || [];\n\tconst name = props.collection.name;\n\tconst backGroundColor = hovered ? 'lightcyan' : '#282c34';\n\tconst number_of_items = items.length;\n\tconsole.log(props);\n\treturn connectDropTarget(\n\t\t<div\n\t\t\tonClick={e => {\n\t\t\t\tprops.showItems(collection.id);\n\t\t\t}}\n\t\t\tclassName=\"collection\"\n\t\t\tstyle={{ color: 'white', background: backGroundColor }}\n\t\t>\n\t\t\t<p className=\"collection-name\">{name}</p>\n\t\t\t<span className=\"number-of-items\">{number_of_items}</span>\n\t\t</div>\n\t);\n};\n\nexport default DropTarget(DndTypes.RESULT, collectionSpec, collect)(Collection);\n"]},"metadata":{},"sourceType":"module"}